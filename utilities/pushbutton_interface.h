/************************************************************************************************
 * This code was automatically generated by Digital Twin Code Generator tool 0.6.9.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 *
 * Generated Date: 6/26/2020
 ***********************************************************************************************/

#ifndef PUSHBUTTON_INTERFACE_H
#define PUSHBUTTON_INTERFACE_H

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include "digitaltwin_interface_client.h"
#include "azure_c_shared_utility/xlogging.h"
#include "azure_c_shared_utility/threadapi.h"

#include "digitaltwin_client_helper.h"
#include "digitaltwin_serializer.h"
#include "parson.h"
#include "../ReButton_impl.h"

#ifdef __cplusplus
extern "C"
{
#endif

typedef enum PUSHBUTTON_TELEMETRY_TAG
{
    PushButton_SINGLECLICK_TELEMETRY,
    PushButton_DOUBLECLICK_TELEMETRY,
    PushButton_TRIPLECLICK_TELEMETRY,
    PushButton_LONGPRESS_TELEMETRY,
    PushButton_SUPERLONGPRESS_TELEMETRY
} PUSHBUTTON_TELEMETRY;

typedef enum PUSHBUTTON_READONLY_PROPERTY_TAG
{
    PushButton_ACTIONCOUNT_PROPERTY
} PUSHBUTTON_PROPERTY;

// DigitalTwin interface name from service perspective.
static const char PushButtonInterfaceId[] = "urn:seeedkk:Interface:PushButton2:1";
static const char PushButtonInterfaceInstanceName[] = "PushButton";

// Telemetry names for this interface.

static const char PushButtonInterface_SingleClickTelemetry[] = "singleClick";

static const char PushButtonInterface_DoubleClickTelemetry[] = "doubleClick";

static const char PushButtonInterface_TripleClickTelemetry[] = "tripleClick";

static const char PushButtonInterface_LongPressTelemetry[] = "longPress";

static const char PushButtonInterface_SuperLongPressTelemetry[] = "superLongPress";

// Property names for this interface.

#define PushButtonInterface_ActionCountProperty "actionCount"

// Command names for this interface

// Methods
DIGITALTWIN_INTERFACE_CLIENT_HANDLE PushButtonInterface_Create();

void PushButtonInterface_Close(DIGITALTWIN_INTERFACE_CLIENT_HANDLE digitalTwinInterfaceClientHandle);

DIGITALTWIN_CLIENT_RESULT PushButtonInterface_Telemetry_SendAll();

#ifdef __cplusplus
}
#endif

#endif  // PUSHBUTTON_INTERFACE_H
